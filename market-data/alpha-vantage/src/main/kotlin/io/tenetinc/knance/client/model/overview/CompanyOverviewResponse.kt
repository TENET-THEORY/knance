package io.tenetinc.finance.alphavantage.io.tenetinc.knance.client.model.overview

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
data class CompanyOverviewResponse(
    @SerialName("Symbol") val symbol: String,
    @SerialName("AssetType") val assetType: String,
    @SerialName("Name") val name: String,
    @SerialName("Description") val description: String,
    @SerialName("CIK") val cik: String,
    @SerialName("Exchange") val exchange: String,
    @SerialName("Currency") val currency: String,
    @SerialName("Country") val country: String,
    @SerialName("Sector") val sector: String,
    @SerialName("Industry") val industry: String,
    @SerialName("Address") val address: String,
    @SerialName("OfficialSite") val officialSite: String,
    @SerialName("FiscalYearEnd") val fiscalYearEnd: String,
    @SerialName("LatestQuarter") val latestQuarter: String,
    @SerialName("MarketCapitalization") val marketCapitalization: String,
    @SerialName("EBITDA") val ebitda: String,
    @SerialName("PERatio") val peRatio: String,
    @SerialName("PEGRatio") val pegRatio: String,
    @SerialName("BookValue") val bookValue: String,
    @SerialName("DividendPerShare") val dividendPerShare: String,
    @SerialName("DividendYield") val dividendYield: String,
    @SerialName("EPS") val eps: String,
    @SerialName("RevenuePerShareTTM") val revenuePerShareTTM: String,
    @SerialName("ProfitMargin") val profitMargin: String,
    @SerialName("OperatingMarginTTM") val operatingMarginTTM: String,
    @SerialName("ReturnOnAssetsTTM") val returnOnAssetsTTM: String,
    @SerialName("ReturnOnEquityTTM") val returnOnEquityTTM: String,
    @SerialName("RevenueTTM") val revenueTTM: String,
    @SerialName("GrossProfitTTM") val grossProfitTTM: String,
    @SerialName("DilutedEPSTTM") val dilutedEPSTTM: String,
    @SerialName("QuarterlyEarningsGrowthYOY") val quarterlyEarningsGrowthYOY: String,
    @SerialName("QuarterlyRevenueGrowthYOY") val quarterlyRevenueGrowthYOY: String,
    @SerialName("AnalystTargetPrice") val analystTargetPrice: String,
    @SerialName("AnalystRatingStrongBuy") val analystRatingStrongBuy: String,
    @SerialName("AnalystRatingBuy") val analystRatingBuy: String,
    @SerialName("AnalystRatingHold") val analystRatingHold: String,
    @SerialName("AnalystRatingSell") val analystRatingSell: String,
    @SerialName("AnalystRatingStrongSell") val analystRatingStrongSell: String,
    @SerialName("TrailingPE") val trailingPE: String,
    @SerialName("ForwardPE") val forwardPE: String,
    @SerialName("PriceToSalesRatioTTM") val priceToSalesRatioTTM: String,
    @SerialName("PriceToBookRatio") val priceToBookRatio: String,
    @SerialName("EVToRevenue") val evToRevenue: String,
    @SerialName("EVToEBITDA") val evToEbitda: String,
    @SerialName("Beta") val beta: String,
    @SerialName("52WeekHigh") val week52High: String,
    @SerialName("52WeekLow") val week52Low: String,
    @SerialName("50DayMovingAverage") val day50MovingAverage: String,
    @SerialName("200DayMovingAverage") val day200MovingAverage: String,
    @SerialName("SharesOutstanding") val sharesOutstanding: String,
    @SerialName("SharesFloat") val sharesFloat: String,
    @SerialName("PercentInsiders") val percentInsiders: String,
    @SerialName("PercentInstitutions") val percentInstitutions: String,
    @SerialName("DividendDate") val dividendDate: String,
    @SerialName("ExDividendDate") val exDividendDate: String
)
